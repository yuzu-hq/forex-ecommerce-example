import Head from "next/head";
import { useState } from "react";

import ProductList from "../components/product-list";
import CurrencyInput from "../components/currency-input";
import currencies from "../currencies";
import products from "../products";

export default function Home({ forexTradingPairs }) {
  const [currency, setCurrency] = useState("USD");
  const forexPair = forexTradingPairs.find((fx) => fx.quoteCurrency.symbol === currency);
  const localizedProducts = products.map((product) => {
    const price = !!forexPair ? product.usdPrice * forexPair.currentRate : product.usdPrice;
    return { ...product, price };
  });
  return (
    <div>
      <Head>
        <title>Forex Ecommerce Example | Yuzu</title>
        <meta name="description" content="Generated by create next app" />
        <link
          href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üçã</text></svg>"
          rel="icon"
        />
      </Head>
      <a className="absolute z-10" href="https://github.com/yuzu-hq/forex-ecommerce-example/blob/main/pages/index.js">
        <img
          loading="lazy"
          width="149"
          height="149"
          src="https://github.blog/wp-content/uploads/2008/12/forkme_left_red_aa0000.png?resize=149%2C149"
          className="attachment-full size-full"
          alt="Fork me on GitHub"
          data-recalc-dims="1"
        />
      </a>
      <div className="max-w-2xl mx-auto pb-16 pt-8 px-4 sm:pb-24 sm:px-6 lg:max-w-7xl lg:px-8">
        <div className="relative flex justify-end pb-8">
          <CurrencyInput value={currency} onChange={setCurrency} />
          <div className="absolute rotate-12 right-[-4px] top-[-20px] whitespace-nowrap z-[-1]">
            <span className="inline-flex h-3 w-3 relative">
              <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-sky-400 opacity-75"></span>
              <span className="relative inline-flex rounded-full h-3 w-3 bg-sky-500"></span>
            </span>
            <span className="font-bold ml-1 text-sky-500">Try it!</span>
          </div>
        </div>
        <ProductList products={localizedProducts} currency={currency} />
      </div>

      <footer className="border-t border-gray-200 flex py-8 justify-center items-center">
        <a href="https://yuzu.dev?utm_source=forex-ecommerge-example&utm_medium=footer">Powered by Yuzu.dev üçã</a>
      </footer>
    </div>
  );
}

const query = `
query ForexEcommerceExampleRates($symbols: [String!]!) {
  forexTradingPairs(input: { symbols: $symbols }) {
    currentRate
    quoteCurrency { symbol }
  }
}`;

export async function getServerSideProps({ req, res }) {
  res.setHeader("Cache-Control", "public, stale-if-error, s-maxage=300, stale-while-revalidate=59");

  const symbols = currencies.filter((c) => c !== "USD").map((c) => `USD-${c}`);
  const start = new Date();
  const response = await fetch(`https://graph.yuzu.dev/graphql`, {
    method: "POST",
    headers: { authorization: "Bearer demo", "content-type": "application/json" },
    body: JSON.stringify({ query, variables: { symbols } }),
  });
  console.log(`ForexEcommerceExampleRates request time: ${new Date() - start}ms`);
  const { data } = await response.json();
  return { props: { ...data } };
}
